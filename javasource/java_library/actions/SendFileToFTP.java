// This file was generated by Mendix Business Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package java_library.actions;

import java_library.FTPConnector;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;

/**
 * 
 */
public class SendFileToFTP extends CustomJavaAction<Boolean>
{
	private String ftpHostName;
	private String ftpUserName;
	private String ftpPassword;
	private String ftpRemoteDirectory;
	private Long ftpPort;
	private IMendixObject __DocumentToExport;
	private system.proxies.FileDocument DocumentToExport;

	public SendFileToFTP(IContext context, String ftpHostName, String ftpUserName, String ftpPassword, String ftpRemoteDirectory, Long ftpPort, IMendixObject DocumentToExport)
	{
		super(context);
		this.ftpHostName = ftpHostName;
		this.ftpUserName = ftpUserName;
		this.ftpPassword = ftpPassword;
		this.ftpRemoteDirectory = ftpRemoteDirectory;
		this.ftpPort = ftpPort;
		this.__DocumentToExport = DocumentToExport;
	}

	@Override
	public Boolean executeAction() throws Exception
	{
		this.DocumentToExport = __DocumentToExport == null ? null : system.proxies.FileDocument.initialize(getContext(), __DocumentToExport);

		// BEGIN USER CODE
		FTPConnector connector = new FTPConnector(this.ftpHostName, (this.ftpPort != null ? this.ftpPort.intValue() : null), this.ftpUserName, this.ftpPassword);
		connector.connect();

		IContext context = this.getContext();

		connector.uploadFile(context, this.DocumentToExport.getMendixObject(), this.ftpRemoteDirectory + this.DocumentToExport.getName());
		Core.getLogger(this.toString()).debug("Uploaded item: " + this.ftpRemoteDirectory + this.DocumentToExport.getName());

		connector.closeConnection();

		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "SendFileToFTP";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
